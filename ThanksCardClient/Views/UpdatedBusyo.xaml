<Window x:Class="ThanksCardClient.Views.UpdatedBusyo"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
        xmlns:l="http://schemas.livet-mvvm.net/2011/wpf"
        xmlns:v="clr-namespace:ThanksCardClient.Views"
        xmlns:vm="clr-namespace:ThanksCardClient.ViewModels"
        Title="UpdatedBusyo" Height="400" Width="525">
    
    <Window.DataContext>
        <vm:UpdatedBusyoViewModel/>
    </Window.DataContext>
    
     <i:Interaction.Triggers>
     
     	<!--Viewに特別な要件が存在しない限りは、トリガーやアクションの自作にこだわらず積極的にコードビハインドを使いましょう -->
    	<!--Viewのコードビハインドは、基本的にView内で完結するロジックとViewModelからのイベントの受信(専用リスナを使用する)に限るとトラブルが少なくなります -->
    	<!--Livet1.1からはコードビハインドでViewModelのイベントを受信するためのWeakEventLisnterサポートが追加されています --> 
        
        <!--WindowのContentRenderedイベントのタイミングでViewModelのInitializeメソッドが呼ばれます-->
        <i:EventTrigger EventName="ContentRendered">
            <l:LivetCallMethodAction MethodTarget="{Binding}" MethodName="Initialize"/>
        </i:EventTrigger>

        <!--Windowが閉じたタイミングでViewModelのDisposeメソッドが呼ばれます-->
        <i:EventTrigger EventName="Closed">
            <l:DataContextDisposeAction/>
        </i:EventTrigger>

        <!--WindowのCloseキャンセル処理に対応する場合は、WindowCloseCancelBehaviorの使用を検討してください-->

        <!-- EditUserViewModel からの TransitionMessage("Updated") を受け取とってログオン画面を閉じる処理。 -->
        <l:InteractionMessageTrigger MessageKey="Updated" Messenger="{Binding Messenger}">
            <l:WindowInteractionMessageAction/>
        </l:InteractionMessageTrigger>


    </i:Interaction.Triggers>
    
    <Grid>
        <StackPanel>
            <StackPanel>
                <TextBlock Text="部署編集" Background="#9ACD32" Foreground="White" FontSize="20" Height="40"/>
            </StackPanel>

            <StackPanel Orientation="Horizontal">
                <TextBlock Text="部署検索" Margin="20,20,0,20" FontWeight="Bold" FontSize="15"/>
                <ComboBox x:Name="SearchDepartments" ItemsSource="{Binding Departments}" DisplayMemberPath="Name"  SelectedValuePath="Id"  Margin="5,10,0,30" Width="87">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="SelectionChanged">
                            <i:InvokeCommandAction Command="{Binding EditDepartmentCommand}" CommandParameter="{Binding ElementName=SearchDepartments, Path=SelectedValue}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </ComboBox>

                <TextBlock Text="課検索" Margin="20,20,0,20" Height="20" FontWeight="Bold" FontSize="15"/>
                <ComboBox x:Name="SearchSection" ItemsSource="{Binding Sections}" DisplayMemberPath="Name"  SelectedValuePath="Id"  Margin="5,10,0,30" Width="87">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="SelectionChanged">
                            <i:InvokeCommandAction Command="{Binding EditSectionCommand}" CommandParameter="{Binding ElementName=SearchSection, Path=SelectedValue}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </ComboBox>
            </StackPanel>

            <StackPanel Orientation="Horizontal">
                <TextBlock Text="部署名" Margin="20,20,0,20" FontWeight="Bold" FontSize="15"/>
                <TextBox Text="{Binding Department.Name}" Margin="20,20,0,20" Width="100" AcceptsReturn="True"/>
                <TextBlock Text="課名" Margin="20,20,0,20" Height="20" FontWeight="Bold" FontSize="15"/>
                <TextBox Text="{Binding Section.Name}" Margin="20,20,0,20" Width="119" AcceptsReturn="True"/>
            </StackPanel>

            <StackPanel Orientation="Horizontal">
                <TextBlock Text="部署CD" Margin="20,20,0,20" FontWeight="Bold" FontSize="15"/>
                <TextBox Text="{Binding Department.CD}" Margin="20,20,0,20" Width="100" AcceptsReturn="True"/>
                <TextBlock Text="課CD" Margin="20,20,0,20" Height="20" FontWeight="Bold" FontSize="15"/>
                <TextBox Text="{Binding Section.CD}" Margin="20,20,0,20" Width="106" AcceptsReturn="True"/>
            </StackPanel>

            <StackPanel Orientation="Horizontal">
                <TextBlock Text="部署"  Margin="200,0,0,20" Height="20" FontWeight="Bold" FontSize="15" />
                <ComboBox ItemsSource="{Binding Departments}" DisplayMemberPath="Name"  SelectedValuePath="Id" SelectedValue="{Binding Section.DepartmentId}" Margin="5,10,0,30" Width="87"/>
            </StackPanel>

            <StackPanel Orientation="Horizontal">
                <Button Content="部署更新" Command="{Binding Submit2Command}" Background="#6495ED" Foreground="White" Height="20" Margin="20,20,0,20" Width="59"/>
                <Button Content="課更新" Command="{Binding SubmitCommand}" Background="#6495ED" Foreground="White" Height="20" Margin="20,20,0,20" Width="41"/>
                <Button Content="部署削除" Command="{Binding DepartmentDeleteCommand}" Background="#6495ED" Foreground="White" Height="20" Margin="20,20,0,20" Width="59" CommandParameter="{Binding Department}"/>
                <Button Content="課削除" Command="{Binding SectionDeleteCommand}" Background="#6495ED" Foreground="White" Height="20" Margin="20,20,0,20" Width="41"  CommandParameter="{Binding Section}"/>
                <Button Content="キャンセル" Command ="{Binding CancelCommand}" Background="#6495ED" Foreground="White"  Margin="20,20,0,20" />
            </StackPanel>
        </StackPanel>

    </Grid>
</Window>
