<Window x:Class="ThanksCardClient.Views.UpdatedEmployee"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
        xmlns:l="http://schemas.livet-mvvm.net/2011/wpf"
        xmlns:v="clr-namespace:ThanksCardClient.Views"
        xmlns:vm="clr-namespace:ThanksCardClient.ViewModels"
        Title="ユーザー編集" Height="500" Width="750" Background="#F5F5F5"
        WindowStartupLocation="CenterOwner">

    <Window.DataContext>
        <vm:UpdatedEmployeeViewModel/>
    </Window.DataContext>

    <i:Interaction.Triggers>

        <!--Viewに特別な要件が存在しない限りは、トリガーやアクションの自作にこだわらず積極的にコードビハインドを使いましょう -->
        <!--Viewのコードビハインドは、基本的にView内で完結するロジックとViewModelからのイベントの受信(専用リスナを使用する)に限るとトラブルが少なくなります -->
        <!--Livet1.1からはコードビハインドでViewModelのイベントを受信するためのWeakEventLisnterサポートが追加されています -->

        <!--WindowのContentRenderedイベントのタイミングでViewModelのInitializeメソッドが呼ばれます-->
        <i:EventTrigger EventName="ContentRendered">
            <l:LivetCallMethodAction MethodTarget="{Binding}" MethodName="Initialize"/>
        </i:EventTrigger>

        <!--Windowが閉じたタイミングでViewModelのDisposeメソッドが呼ばれます-->
        <i:EventTrigger EventName="Closed">
            <l:DataContextDisposeAction/>
        </i:EventTrigger>

        <!--WindowのCloseキャンセル処理に対応する場合は、WindowCloseCancelBehaviorの使用を検討してください-->

        <!-- EditUserViewModel からの TransitionMessage("Updated") を受け取とってログオン画面を閉じる処理。 -->
        <l:InteractionMessageTrigger MessageKey="Updated" Messenger="{Binding Messenger}">
            <l:WindowInteractionMessageAction/>
        </l:InteractionMessageTrigger>

        <!-- EditUserViewModel からの TransitionMessage("Deleted") を受け取とってログオン画面を閉じる処理。 -->
        <l:InteractionMessageTrigger MessageKey="Deleted" Messenger="{Binding Messenger}">
            <l:WindowInteractionMessageAction/>
        </l:InteractionMessageTrigger>


    </i:Interaction.Triggers>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="371*"/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>
        <StackPanel>

            <StackPanel>
                <TextBlock Text="ユーザー編集" Background="#9ACD32" Foreground="White" FontSize="20" Height="34"/>
            </StackPanel>

            <StackPanel  Orientation="Horizontal" Height="111">
                <TextBlock Text="課検索" Margin="20,48,0,28" FontWeight="Bold" FontSize="20" Width="68"/>
                <ComboBox x:Name="SearchSection" ItemsSource="{Binding Sections}" DisplayMemberPath="Name"  SelectedValuePath="Id"  Margin="20,48,0,0" Width="200"  VerticalAlignment="Top" Height="35"  FontSize="20">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="SelectionChanged">
                            <i:InvokeCommandAction Command="{Binding SectionSearchCommand}" CommandParameter="{Binding ElementName=SearchSection, Path=SelectedValue}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </ComboBox>

                <TextBlock Text="名前検索" Margin="50,48,0,10" FontWeight="Bold" FontSize="20" Width="94"/>

                <ComboBox x:Name="EditEmployee" ItemsSource="{Binding EmployeesInDep}" DisplayMemberPath="Name"  SelectedValuePath="Id" Margin="20,48,0,0" Width="200"  VerticalAlignment="Top" Height="35"  FontSize="20">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="SelectionChanged">
                            <i:InvokeCommandAction Command="{Binding EditEmployeeCommand}" CommandParameter="{Binding ElementName=EditEmployee, Path=SelectedValue}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </ComboBox>
            </StackPanel>


            <StackPanel Orientation="Horizontal" Height="86">
                <TextBlock Text="名前" Margin="40,20,0,20" FontWeight="Bold" FontSize="20" Width="42"/>
                <TextBox Text="{Binding Employee.Name}" Margin="25,20,0,29" Width="200" AcceptsReturn="True" FontSize="20"/>
                <TextBlock Text="メールアドレス" Margin="30,20,0,20" FontWeight="Bold" FontSize="20" Width="116"/>
                <TextBox Text="{Binding Employee.MailAddress}" Margin="20,20,0,29" Width="200" AcceptsReturn="True" FontSize="20"/>
            </StackPanel>

            <StackPanel Orientation="Horizontal" Height="80">
                <TextBlock Text="CD    " Margin="40,20,0,20" FontWeight="Bold" FontSize="20" Width="34"/>
                <TextBox Text="{Binding Employee.CD}" Margin="30,20,0,20" Width="200" AcceptsReturn="True" FontSize="20"/>
                <TextBlock Text="パスワード" Margin="70,20,0,20" FontWeight="Bold" FontSize="20" Width="82"/>
                <TextBox Text="{Binding Employee.Password}" Margin="15,20,0,20"  Width="200" AcceptsReturn="True" FontSize="20"/>
            </StackPanel>

            <StackPanel Orientation="Horizontal" Height="73">
                <TextBlock Text="所属課" Margin="20,21,0,10" FontWeight="Bold" FontSize="20" Width="64"/>
                <ComboBox ItemsSource="{Binding Sections}" DisplayMemberPath="Name"  SelectedValuePath="Id"  Margin="20,21,0,0" Width="200"  VerticalAlignment="Top" Height="35" SelectedValue="{Binding Employee.SectionId}" FontSize="20"/>
            </StackPanel>

            <StackPanel Orientation="Horizontal" Margin="10,0,0,0" Height="73">
                <Button Content="更新" Command="{Binding Submit2Command}" Background="#6495ED" Foreground="White" Margin="350,10,0,10" Width="100" FontSize="20" RenderTransformOrigin="0.5,0.5"/>
                <Button Content="削除" Command="{Binding EmployeeDeleteCommand}" Background="#6495ED" Foreground="White" Margin="20,10,0,10" Width="100" CommandParameter="{Binding Employee}" FontSize="20"/>
                <Button Content="キャンセル" Command ="{Binding CancelCommand}" Background="#6495ED" Foreground="White"  Margin="20,10,0,10" Width="120" FontSize="20"/>
            </StackPanel>

        </StackPanel>





    </Grid>
</Window>
