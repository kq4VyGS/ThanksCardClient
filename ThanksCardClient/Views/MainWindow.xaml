<Window x:Class="ThanksCardClient.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
        xmlns:l="http://schemas.livet-mvvm.net/2011/wpf"
        xmlns:v="clr-namespace:ThanksCardClient.Views"
        xmlns:vm="clr-namespace:ThanksCardClient.ViewModels"
        Title="ログイン" Height="371.615" Width="521.115">

    <Window.DataContext>
        <vm:MainWindowViewModel/>
    </Window.DataContext>

   
    
    <i:Interaction.Triggers>

        <!--Viewに特別な要件が存在しない限りは、トリガーやアクションの自作にこだわらず積極的にコードビハインドを使いましょう -->
        <!--Viewのコードビハインドは、基本的にView内で完結するロジックとViewModelからのイベントの受信(専用リスナを使用する)に限るとトラブルが少なくなります -->
        <!--Livet1.1からはコードビハインドでViewModelのイベントを受信するためのWeakEventLisnterサポートが追加されています -->

        <!--WindowのContentRenderedイベントのタイミングでViewModelのInitializeメソッドが呼ばれます-->
        <i:EventTrigger EventName="ContentRendered">
            <l:LivetCallMethodAction MethodTarget="{Binding}" MethodName="Initialize"/>
        </i:EventTrigger>

        <!--Windowが閉じたタイミングでViewModelのDisposeメソッドが呼ばれます-->
        <i:EventTrigger EventName="Closed">
            <l:DataContextDisposeAction/>
        </i:EventTrigger>

        <!--WindowのCloseキャンセル処理に対応する場合は、WindowCloseCancelBehaviorの使用を検討してください-->

        <!-- LogonViewModel からの TransitionMessage("Authorized") を受け取とってログオン画面を閉じる処理。 -->
        <l:InteractionMessageTrigger MessageKey="Authorized" Messenger="{Binding Messenger}">
            <l:WindowInteractionMessageAction/>
        </l:InteractionMessageTrigger>

    </i:Interaction.Triggers>

    <Grid>
        <StackPanel>
            <StackPanel>
                <TextBlock Text="{Binding ErrorMessage}" Foreground="Red"/>
                <TextBlock Text="―Logon―" Margin="220,0,234,0"/>
                <UniformGrid  Columns="2">
                    <TextBlock Text="メールアドレス　:" Margin="166,0,0,0"/>
                    <TextBox Text="{Binding Employee.MailAddress}" Margin="0,0,146,0"/>
                </UniformGrid>
                <UniformGrid  Columns="2">
                    <TextBlock Text="パスワード　:" Margin="183,0,0,0"/>
                    <TextBox Text="{Binding Employee.Password}" Margin="0,0,146,0"/>
                </UniformGrid>
                <Button Content="ログイン" Command="{Binding LogonCommand}" Margin="208,0,234,0"/>
            </StackPanel>
        </StackPanel>
    </Grid>
</Window>